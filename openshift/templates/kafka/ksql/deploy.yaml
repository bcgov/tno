apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: kafka-ksql-cluster
  annotations:
    description: Kafka KSQL cluster
    iconClass: icon-kafka
    tags: kafka,ksql,confluent

parameters:
  - name: SOLUTION_NAME
    displayName: Solution Group Name
    description: The name of the solution (e.g tno).
    required: true
    value: "tno"
  - name: APP_NAME
    displayName: Application Name
    description: The name of the application (e.g. api-editor.dev).
    required: true
    value: "kafka-ksql"

  - name: PROJECT_NAMESPACE
    displayName: "OpenShift Project Namespace"
    description: "The namespace of the OpenShift project containing the application."
    required: true
    value: "9b301c"
  - name: ENV_NAME
    displayName: "Environment name"
    description: "The name for this environment [dev, test, prod]"
    required: true
    value: "dev"

  - name: IMAGE
    displayName: Image
    description: The image name and path.
    required: true
    value: "image-registry.openshift-image-registry.svc:5000/9b301c-tools/tno-kafka-ksql"
  - name: IMAGE_TAG
    displayName: Image Tag
    description: The image tag used to specify which image you would like deployed.
    required: true
    value: "latest"

  - name: APP_PORT
    displayName: Application Port
    description: The port used to communicate with the Pod
    value: "8088"

  - name: STORAGE_CLASS
    displayName: "The Storage Class Name"
    description: "The storage class name is the type of storage [netapp-file-standard, netapp-file-extended, netapp-file-backup, netapp-block-standard, netapp-block-extended]"
    required: true
    value: "netapp-file-standard"
  - name: ACCESS_MODE
    displayName: "The Storage Access Mode"
    description: "The storage access mode [ReadWriteOnce, ReadWriteMany]"
    required: true
    value: "ReadWriteOnce"
  - name: VOLUME_CAPACITY
    displayName: "Persistent Volume Capacity"
    description: "Volume space available for data, e.g. 512Mi, 2Gi."
    required: true
    value: "500Mi"

  - name: REPLICAS
    displayName: REPLICAS
    description: The number of StatefulSet replicas to use.
    required: true
    value: "3"
  - name: CPU_REQUEST
    displayName: "Requested Minimum Resources CPU Limit"
    description: "The requested minimum resources CPU limit (in cores) for this build."
    required: true
    value: 50m
  - name: CPU_LIMIT
    displayName: "Resources CPU Limit"
    description: "The resources CPU limit (in cores) for this build."
    required: true
    value: 150m
  - name: MEMORY_REQUEST
    displayName: "Requested Minimum Memory Limit"
    description: "Minimum requested amount of memory the container can use."
    required: true
    value: 50Mi
  - name: MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: 250Mi

objects:
  # Service for external communication
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
    spec:
      type: ClusterIP
      sessionAffinity: None
      ports:
        - name: host
          port: ${{APP_PORT}}
          protocol: TCP
          targetPort: ${{APP_PORT}}
      selector:
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
        statefulset: ${SOLUTION_NAME}-${APP_NAME}-cluster

  # Service for headless communication
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}-headless
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}-headless
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
    spec:
      clusterIP: None
      sessionAffinity: None
      ports:
        - name: host
          port: ${{APP_PORT}}
          protocol: TCP
          targetPort: ${{APP_PORT}}
      selector:
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
        statefulset: ${SOLUTION_NAME}-${APP_NAME}-cluster

  - apiVersion: policy/v1beta1
    kind: PodDisruptionBudget
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
    spec:
      selector:
        matchLabels:
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
      maxUnavailable: 1

  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
    spec:
      podManagementPolicy: OrderedReady
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          statefulset: ${SOLUTION_NAME}-${APP_NAME}-cluster
      serviceName: ${SOLUTION_NAME}-${APP_NAME}-headless
      updateStrategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            solution: ${SOLUTION_NAME}
            app: ${APP_NAME}
            statefulset: ${SOLUTION_NAME}-${APP_NAME}-cluster
        spec:
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccountName: ${SOLUTION_NAME}
          terminationGracePeriodSeconds: 0
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: statefulset
                        operator: In
                        values:
                          - ${SOLUTION_NAME}-${APP_NAME}-cluster
                  topologyKey: "kubernetes.io/hostname"
          containers:
            - name: ${APP_NAME}
              image: ${IMAGE}:${IMAGE_TAG}
              imagePullPolicy: Always
              env:
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                # - name: KSQL_CONFIG_DIR
                #   value: /etc/ksql
                - name: KSQL_BOOTSTRAP_SERVERS
                  value: http://${SOLUTION_NAME}-broker-headless:9092
                - name: KSQL_HOST_NAME
                  value: ${SOLUTION_NAME}-${APP_NAME}
                - name: KSQL_LISTENERS
                  value: http://0.0.0.0:${APP_PORT}
                - name: KSQL_CACHE_MAX_BYTES_BUFFERING
                  value: "0"
                - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
                  value: http://${SOLUTION_NAME}-schema-registry:8081
                - name: KSQL_PRODUCER_INTERCEPTOR_CLASSES
                  value: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
                - name: KSQL_CONSUMER_INTERCEPTOR_CLASSES
                  value: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
                - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR
                  value: "3"
                - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
                  value: "true"
                - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
                  value: "true"
                - name: KSQL_KSQL_STREAMS_PRODUCER_RETRIES
                  value: "2147483647"
                - name: KSQL_KSQL_STREAMS_PRODUCER_CONFLUENT_BATCH_EXPIRY_MS
                  value: "9223372036854775807"
                - name: KSQL_KSQL_STREAMS_PRODUCER_REQUEST_TIMEOUT_MS
                  value: "300000"
                - name: KSQL_KSQL_STREAMS_PRODUCER_MAX_BLOCK_MS
                  value: "9223372036854775807"
                - name: KSQL_KSQL_STREAMS_REPLICATION_FACTOR
                  value: "3"
                - name: KSQL_KSQL_SINK_REPLICAS
                  value: "3"
                - name: KSQL_KSQL_STREAMS_STATE_DIR
                  value: /var/lib/ksql/data
                - name: KSQL_KSQL_STREAMS_NUM_STANDBY_REPLICAS
                  value: "1"
              ports:
                - containerPort: ${{APP_PORT}}
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              # livenessProbe:
              #   exec:
              #     command:
              #       - bin/kafka-topics
              #       - --zookeeper
              #       - "${SOLUTION_NAME}-zookeeper:2181"
              #       - --list
              #   initialDelaySeconds: 60
              #   timeoutSeconds: 5
              # readinessProbe:
              #   exec:
              #     command:
              #       - bin/kafka-topics
              #       - --zookeeper
              #       - "${SOLUTION_NAME}-zookeeper:2181"
              #       - --list
              #   initialDelaySeconds: 60
              #   timeoutSeconds: 5
              volumeMounts:
                - name: ksql-data
                  mountPath: /var/lib/ksql/data
      volumeClaimTemplates:
        - metadata:
            annotations:
              volume.beta.kubernetes.io/storage-class: ${STORAGE_CLASS}
            labels:
              solution: ${SOLUTION_NAME}
              app: ${APP_NAME}
            name: ksql-data
          spec:
            storageClassName: ${STORAGE_CLASS}
            accessModes:
              - ${ACCESS_MODE}
            resources:
              requests:
                storage: ${VOLUME_CAPACITY}
