apiVersion: v1
data:
  CHES_FROM: (DEV) Media Monitoring Insights <mmi@gov.bc.ca>
  KAFKA_CLIENT_ID: ContentHistoric-TNO
  MAX_FAIL_LIMIT: "5"
kind: ConfigMap
metadata:
  annotations:
    created-by: jeremy.foster
    description: Content TNO service configuration settings
  labels:
    component: content-tno-service
    managed-by: kustomize
    name: content-tno-service
    part-of: tno
    version: 1.0.0
  name: content-tno-service
  namespace: 9b301c-dev
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    created-by: jeremy.foster
    description: Exposes and load balances the application pods.
  labels:
    component: content-tno-service
    managed-by: kustomize
    name: content-tno-service
    part-of: tno
    version: 1.0.0
  name: content-tno-service
  namespace: 9b301c-dev
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    component: content-tno-service
    part-of: tno
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    created-by: jeremy.foster
    description: Defines how to deploy content-tno-service
  labels:
    component: content-tno-service
    managed-by: kustomize
    name: content-tno-service
    part-of: tno
    version: 1.0.0
  name: content-tno-service
  namespace: 9b301c-dev
spec:
  replicas: 1
  selector:
    component: content-tno-service
    name: content-tno-service
    part-of: tno
  strategy:
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        component: content-tno-service
        name: content-tno-service
        part-of: tno
      name: content-tno-service
    spec:
      containers:
      - env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Staging
        - name: ASPNETCORE_URLS
          value: http://+:8080
        - name: Logging__LogLevel__TNO
          value: Information
        - name: Service__ApiUrl
          valueFrom:
            configMapKeyRef:
              key: API_HOST_URL
              name: services
        - name: Service__EmailTo__0
          valueFrom:
            configMapKeyRef:
              key: EMAIL_FAILURE_TO
              name: services
        - name: Auth__Keycloak__Authority
          valueFrom:
            configMapKeyRef:
              key: KEYCLOAK_AUTHORITY
              name: services
        - name: Auth__Keycloak__Audience
          valueFrom:
            configMapKeyRef:
              key: KEYCLOAK_AUDIENCE
              name: services
        - name: Auth__Keycloak__Secret
          valueFrom:
            secretKeyRef:
              key: KEYCLOAK_CLIENT_SECRET
              name: services
        - name: Kafka__Consumer__GroupId
          valueFrom:
            configMapKeyRef:
              key: KAFKA_CLIENT_ID
              name: content-tno-service
        - name: Kafka__Consumer__BootstrapServers
          valueFrom:
            configMapKeyRef:
              key: KAFKA_BOOTSTRAP_SERVERS
              name: services
        - name: Kafka__Producer__ClientId
          valueFrom:
            configMapKeyRef:
              key: KAFKA_CLIENT_ID
              name: content-tno-service
        - name: Kafka__Producer__GroupId
          valueFrom:
            configMapKeyRef:
              key: KAFKA_CLIENT_ID
              name: content-tno-service
        - name: Kafka__Producer__BootstrapServers
          valueFrom:
            configMapKeyRef:
              key: KAFKA_BOOTSTRAP_SERVERS
              name: services
        - name: Service__MaxFailLimit
          valueFrom:
            configMapKeyRef:
              key: MAX_FAIL_LIMIT
              name: content-tno-service
        - name: Service__UnpublishedIndex
          valueFrom:
            configMapKeyRef:
              key: UNPUBLISHED_INDEX
              name: content-service
        - name: Service__PublishedIndex
          valueFrom:
            configMapKeyRef:
              key: PUBLISHED_INDEX
              name: content-service
        - name: Service__NotificationTopic
          valueFrom:
            configMapKeyRef:
              key: NOTIFICATION_TOPIC
              name: content-service
        - name: CHES__From
          valueFrom:
            configMapKeyRef:
              key: CHES_FROM
              name: content-service
        - name: CHES__EmailEnabled
          valueFrom:
            configMapKeyRef:
              key: CHES_EMAIL_ENABLED
              name: content-service
        - name: CHES__EmailAuthorized
          valueFrom:
            configMapKeyRef:
              key: CHES_EMAIL_AUTHORIZED
              name: content-service
        - name: CHES__AuthUrl
          valueFrom:
            configMapKeyRef:
              key: CHES_AUTH_URL
              name: ches
        - name: CHES__HostUri
          valueFrom:
            configMapKeyRef:
              key: CHES_HOST_URI
              name: ches
        - name: CHES__Username
          valueFrom:
            secretKeyRef:
              key: USERNAME
              name: ches
        - name: CHES__Password
          valueFrom:
            secretKeyRef:
              key: PASSWORD
              name: ches
        - name: Service__ContentTopics
          value: TNO-HISTORIC
        - name: Service__MigrationOptions__AllowSourceContentOverwrite
          value: "true"
        image: ""
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 30
        name: content-tno-service
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 150m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: /data
          name: ingest-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: ingest-storage
        persistentVolumeClaim:
          claimName: ingest-storage
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - content-tno-service
      from:
        kind: ImageStreamTag
        name: content-tno-service:dev
        namespace: 9b301c-tools
    type: ImageChange
