---
# Open up ports to communicate with the app.
kind: Service
apiVersion: v1
metadata:
  name: tno-api
  namespace: default
  annotations:
    description: Exposes and load balances the application pods.
  labels:
    name: tno-api
    solution: tno
    app: api
spec:
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    solution: tno
    app: api
  sessionAffinity: None
  type: ClusterIP

---
# How the app will be deployed to the pod.
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: tno-api
  namespace: default
  annotations:
    description: Defines how to deploy tno-api
  labels:
    name: tno-api
    solution: tno
    app: api
spec:
  replicas: 3
  selector:
    name: tno-api
    solution: tno
    app: api
  strategy:
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      name: tno-api
      labels:
        name: tno-api
        solution: tno
        app: api
    spec:
      volumes:
        - name: file-storage
          persistentVolumeClaim:
            claimName: file-storage
      containers:
        - name: tno-api
          image: ""
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: file-storage
              mountPath: /data
          resources:
            requests:
              cpu: 20m
              memory: 250Mi
            limits:
              cpu: 100m
              memory: 500Mi
          env:
            - name: ASPNETCORE_URLS
              value: http://+:8080

            - name: Storage__UploadPath
              value: /data

            - name: Keycloak__Authority
              valueFrom:
                configMapKeyRef:
                  name: tno-api
                  key: KEYCLOAK_AUTHORITY
            - name: Keycloak__Realm
              valueFrom:
                configMapKeyRef:
                  name: tno-api
                  key: KEYCLOAK_REALM
            - name: Keycloak__Audience
              valueFrom:
                configMapKeyRef:
                  name: tno-api
                  key: KEYCLOAK_AUDIENCE

            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: tno-api
                  key: KAFKA_BOOTSTRAP_SERVERS

            - name: ConnectionStrings__TNO
              valueFrom:
                configMapKeyRef:
                  name: tno-api
                  key: CONNECTION_STRING
            - name: DB_POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-cluster-pguser-postgres-admin
                  key: user
            - name: DB_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-cluster-pguser-postgres-admin
                  key: password

            - name: ELASTIC_URIS
              valueFrom:
                configMapKeyRef:
                  name: tno-api
                  key: ELASTIC_URIS
            - name: ELASTIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tno-elastic
                  key: ELASTIC_USERNAME
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tno-elastic
                  key: ELASTIC_PASSWORD

            - name: AZURE_STORAGE_CONTAINER_NAME
              valueFrom:
                secretKeyRef:
                  name: tno-api
                  key: AZURE_STORAGE_CONTAINER_NAME
            - name: AZURE_STORAGE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: tno-api
                  key: AZURE_STORAGE_CONNECTION_STRING

            - name: COGNITIVE_SERVICES_SPEECH_SUBSCRIPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: tno-api
                  key: COGNITIVE_SERVICES_SPEECH_SUBSCRIPTION_KEY
            - name: COGNITIVE_SERVICES_SPEECH_REGION
              valueFrom:
                secretKeyRef:
                  name: tno-api
                  key: COGNITIVE_SERVICES_SPEECH_REGION

            - name: AZURE_VIDEO_ANALYZER_SUBSCRIPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: tno-api
                  key: AZURE_VIDEO_ANALYZER_SUBSCRIPTION_KEY
            - name: AZURE_VIDEO_ANALYZER_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  name: tno-api
                  key: AZURE_VIDEO_ANALYZER_ACCOUNT_ID
            - name: AZURE_VIDEO_ANALYZER_LOCATION
              valueFrom:
                secretKeyRef:
                  name: tno-api
                  key: AZURE_VIDEO_ANALYZER_LOCATION
          livenessProbe:
            httpGet:
              path: "/health"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 60
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - tno-api
        from:
          kind: ImageStreamTag
          namespace: 9b301c-tools
          name: tno-api:dev
