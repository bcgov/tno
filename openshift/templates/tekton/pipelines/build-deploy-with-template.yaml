apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: build-deploy-with-template
  annotations:
    description: Build an docker image from a GIT repository using a prebuilt oc template.
      Then deploy to the specified environment.
    tags: oc,git,docker,build,deploy
spec:
  params:
    - name: SOLUTION_NAME
      description: The name of the solution.
      type: string
      default: tno
    - name: APP_NAME
      description: The name of the application component (e.g api, solution, database).
      type: string

    - name: TEMPLATE_NAME
      description: The BuildConfig Template name that will be used to generate a BuildConfig.
      type: string

    - name: GIT_URL
      description: The URL of the repository with your application source code.
      type: string
      default: "https://github.com/bcgov/tno.git"
    - name: GIT_REF
      description:
        Set this to a branch name, tag or other ref of your repository if you
        are not using the default branch.
      type: string
      default: "dev"
    - name: CONTEXT_DIR
      description: Set this to use a subdirectory of the source code repository
      type: string
      default: ""
    - name: DOCKERFILE
      description: The Dockerfile name
      type: string
      default: "Dockerfile"

    - name: IMAGE_TAG
      description: Tag to apply to the built image
      type: string
      default: "latest"

    - name: DEPLOY_TO
      description: The environment to deploy to [dev, test, prod, tools].
      type: string
      default: "dev"
    - name: WEB_APP_URL
      description: The URL to the web application that will be ZAP scanned.
      type: string
      default: ""

    - name: CPU_LIMIT
      description: The resources CPU limit (in cores) for this build.
      default: 2000m
    - name: MEMORY_LIMIT
      description: Maximum amount of memory the container can use.
      default: 2Gi

  workspaces:
    - name: owasp-settings
      description: |
        mounts /zap/wrk to store generated configs and results.

  tasks:
    - name: build
      taskRef:
        name: oc-build-with-template
        kind: Task
      params:
        - name: TEMPLATE_NAME
          value: $(params.TEMPLATE_NAME)
        - name: SOLUTION_NAME
          value: $(params.SOLUTION_NAME)
        - name: APP_NAME
          value: $(params.APP_NAME)

        - name: GIT_URL
          value: $(params.GIT_URL)
        - name: GIT_REF
          value: $(params.GIT_REF)
        - name: CONTEXT_DIR
          value: $(params.CONTEXT_DIR)
        - name: DOCKERFILE
          value: $(params.DOCKERFILE)

        - name: IMAGE_TAG
          value: $(params.IMAGE_TAG)

        - name: CPU_LIMIT
          value: $(params.CPU_LIMIT)
        - name: MEMORY_LIMIT
          value: $(params.MEMORY_LIMIT)

    - name: deploy
      runAfter:
        - build
      taskRef:
        name: oc-deploy-with-tag
        kind: Task
      params:
        - name: IMAGE_NAME
          value: $(params.SOLUTION_NAME)-$(params.APP_NAME)
        - name: IMAGE_TAG
          value: $(params.IMAGE_TAG)
        - name: ENV
          value: $(params.DEPLOY_TO)

    - name: owasp-scanner
      conditions:
        - conditionRef: run-owasp
          params:
            - name: TARGET_URL
              value: $(params.WEB_APP_URL)
      runAfter:
        - deploy
      taskRef:
        name: owasp-scanner
        kind: Task
      params:
        - name: TARGET_URL
          value: $(params.WEB_APP_URL)
        - name: SCAN_TYPE
          value: quick
        - name: SCAN_DURATION
          value: "1"
      workspaces:
        - name: owasp-settings
          workspace: owasp-settings
