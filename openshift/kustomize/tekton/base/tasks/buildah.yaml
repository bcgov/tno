apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
  description: |
    Using Buildah build a new image from source code and push the new image
    to the specified image registry.
  annotations:
    tekton.dev/displayName: Buildah Image
    tekton.dev/pipelines.minVersion: 0.17.0
    tekton.dev/tags: build
  labels:
    name: buildah
    part-of: tno
    version: 1.0.0
    component: task
    managed-by: kustomize
spec:
  params:
    - name: CONTEXT
      description: Path to the source code to build.
      default: .
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile

    - name: IMAGE_REGISTRY
      description: The Root url of the image registry.
      default: image-registry.openshift-image-registry.svc:5000/9b301c-tools
    - name: IMAGE
      description: Reference of the image buildah will produce.
    - name: IMAGE_TAG
      description: The tag given to the built image.
      type: string
      default: latest

    - name: STORAGE_DRIVER
      description: Set buildah storage driver
      default: vfs
  workspaces:
    - name: source
  steps:
    - name: build
      image: buildah:latest
      workingDir: $(workspaces.source.path)
      env:
        - name: IMAGE_REGISTRY_USER
          valueFrom:
            secretKeyRef:
              name: pipelines
              key: username
        - name: IMAGE_REGISTRY_PASS
          valueFrom:
            secretKeyRef:
              name: pipelines
              key: password
      resources:
        requests:
          memory: 250Mi
          cpu: 250m
        limits:
          memory: 2560Mi
          cpu: 500m
      script: |
        #!/usr/bin/env bash

        export TMPDIR="/data/tmp/buildah"
        mkdir -p "${TMPDIR}"

        if [ ! -z "$IMAGE_REGISTRY_USER" ];  then
          buildah login \
            -u $IMAGE_REGISTRY_USER \
            -p $IMAGE_REGISTRY_PASS $(params.IMAGE_REGISTRY) > /dev/null
        fi

        # Build the image.
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          --no-cache -f $(params.DOCKERFILE) -t $(params.IMAGE_REGISTRY)/$(params.IMAGE):$(params.IMAGE_TAG) --isolation chroot $(params.CONTEXT)

        # Push the image to the registry.
        buildah --storage-driver=$(params.STORAGE_DRIVER) push $(params.IMAGE_REGISTRY)/$(params.IMAGE):$(params.IMAGE_TAG)
        set -x
