debug: false

server:
  port: ${env.SERVER_PORT:8080}

# logging:
#   level:
#     root: ERROR
#     ca.bc.gov.tno: DEBUG
#     org:
#       springframework:
#         context: DEBUG

spring:
  main:
    banner-mode: 'off'

  h2:
    console:
      enabled: false
      
  datasource:
    url: ${env.DB_URL:jdbc:postgresql://database:5432/tno}
    username: ${env.DB_USERNAME}
    password: ${env.DB_PASSWORD}

  flyway:
    enabled: ${env.DB_MIGRATION_ENABLED:false}
    validate-on-migrate: ${env.DB_VALIDATE_MIGRATION:true}

  jpa:
    show-sql: ${env.JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL92Dialect
    hibernate:
      ddl-auto: ${env.JPA_DDL_AUTO:none}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

kafka:
  bootstrap-servers: ${env.KAFKA_BOOTSTRAP_SERVERS}
  consumer:
    group-id: ${env.KAFKA_GROUP_ID}
    topics: ${env.KAFKA_CONSUMER_TOPICS}
    poll-delay: ${env.KAFKA_POLL_DELAY:5000}
    enable-auto-commit: ${env.ENABLE_AUTO_COMMIT:false}
    auto-offset-reset: ${env.AUTO_OFFSET_RESET:earliest}
  producer:
    client-id: ${env.KAFKA_CLIENT_ID}
    topic: ${env.KAFKA_PRODUCER_TOPIC}

nlp:
  max-failed-attempts: ${env.MAX_FAILED_ATTEMPTS:3}
  failed-delay: ${env.FAILED_DELAY:5000}