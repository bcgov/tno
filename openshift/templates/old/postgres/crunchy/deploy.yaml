apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cruncydb-pgsql-persistent
  annotations:
    description: |-
      CrunchyDB database cluster, with persistent storage.
    iconClass: icon-postgresql
    openshift.io/display-name: CrunchyDB Postgresql (Persistent)
    openshift.io/long-description:
      This template deploys a CrunchyDB postgresql HA
      cluster with persistent storage.
    tags: postgresql

parameters:
  - name: SOLUTION_NAME
    displayName: Solution Group Name
    description: The name of the solution (e.g tno).
    required: true
    value: tno
  - name: APP_NAME
    displayName: Application Name
    description: The name of the application (e.g. api-editor.dev).
    required: true
    value: database

  - name: PROJECT_NAMESPACE
    displayName: OpenShift Project Namespace
    description: The namespace of the OpenShift project containing the application.
    required: true
    value: 9b301c
  - name: ENV_NAME
    displayName: Environment name
    description: The name for this environment [dev, test, prod]
    required: true
    value: dev

  - name: DB_IMAGE
    displayName: Crunchy DB Image
    description: The image to deploy.
    value: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:centos8-13.5-0
  - name: POSTGRES_VERSION
    displayName: PostgreSQL Version Number
    description: The version number of the database.
    value: "13"

  - name: STORAGE_CLASS
    displayName: The Storage Class Name
    description: The storage class name is the type of storage [netapp-file-standard, netapp-file-extended, netapp-file-backup, netapp-block-standard, netapp-block-extended]
    required: true
    value: netapp-block-standard
  - name: ACCESS_MODE
    displayName: The Storage Access Mode
    description: The storage access mode [ReadWriteOnce, ReadWriteMany]
    required: true
    value: ReadWriteOnce
  - name: VOLUME_CAPACITY
    displayName: Persistent Volume Capacity
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    required: true
    value: 2Gi

  - name: DB_MONITOR_IMAGE
    displayName: Crunchy DB Monitoring Image
    description: The monitoring image to deploy
    value: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.0.4-0

  - name: DB_BACKUP_IMAGE
    displayName: Crunchy DB Backup Image
    description: The backup image to deploy
    value: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:centos8-2.35-0

  - name: BACKUP_STORAGE_CLASS
    displayName: The Backup Storage Class Name
    description: The backup storage class name is the type of storage [netapp-file-standard, netapp-file-extended, netapp-file-backup, netapp-block-standard, netapp-block-extended]
    required: true
    value: netapp-file-backup
  - name: BACKUP_ACCESS_MODE
    displayName: The Backup Storage Access Mode
    description: The backup storage access mode [ReadWriteOnce, ReadWriteMany]
    required: true
    value: ReadWriteOnce
  - name: BACKUP_VOLUME_CAPACITY
    displayName: Backup persistent Volume Capacity
    description: Backup volume space available for data, e.g. 512Mi, 2Gi.
    required: true
    value: 5Gi

  - name: DB_BOUNCER_IMAGE
    displayName: Crunchy DB Bouncer Image
    description: The bouncer image to deploy
    value: registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:centos8-1.15-3
  - name: BOUNCER_REPLICAS
    displayName: Bouncer Replicas
    description: The number of DB Bouncer replicas to use.
    required: true
    value: "2"

  - name: REPLICAS
    displayName: Replicas
    description: The number of StatefulSet replicas to use.
    required: true
    value: "3"
  - name: CPU_REQUEST
    displayName: "Requested Minimum Resources CPU Limit"
    description: "The requested minimum resources CPU limit (in cores) for this build."
    required: true
    value: 50m
  - name: CPU_LIMIT
    displayName: "Resources CPU Limit"
    description: "The resources CPU limit (in cores) for this build."
    required: true
    value: 500m
  - name: MEMORY_REQUEST
    displayName: "Requested Minimum Memory Limit"
    description: "Minimum requested amount of memory the container can use."
    required: true
    value: 250Mi
  - name: MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: 2Gi

  - name: MONITOR_CPU_REQUEST
    displayName: "Requested Minimum Resources CPU Limit"
    description: "The requested minimum resources CPU limit (in cores) for this build."
    required: true
    value: 25m
  - name: MONITOR_CPU_LIMIT
    displayName: "Resources CPU Limit"
    description: "The resources CPU limit (in cores) for this build."
    required: true
    value: 50m
  - name: MONITOR_MEMORY_REQUEST
    displayName: "Requested Minimum Memory Limit"
    description: "Minimum requested amount of memory the container can use."
    required: true
    value: 100Mi
  - name: MONITOR_MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: 250Mi

  - name: BACKUP_CPU_REQUEST
    displayName: "Requested Minimum Resources CPU Limit"
    description: "The requested minimum resources CPU limit (in cores) for this build."
    required: true
    value: 50m
  - name: BACKUP_CPU_LIMIT
    displayName: "Resources CPU Limit"
    description: "The resources CPU limit (in cores) for this build."
    required: true
    value: 250m
  - name: BACKUP_MEMORY_REQUEST
    displayName: "Requested Minimum Memory Limit"
    description: "Minimum requested amount of memory the container can use."
    required: true
    value: 100Mi
  - name: BACKUP_MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: 1Gi

  - name: BOUNCER_CPU_REQUEST
    displayName: "Requested Minimum Resources CPU Limit"
    description: "The requested minimum resources CPU limit (in cores) for this build."
    required: true
    value: 25m
  - name: BOUNCER_CPU_LIMIT
    displayName: "Resources CPU Limit"
    description: "The resources CPU limit (in cores) for this build."
    required: true
    value: 50m
  - name: BOUNCER_MEMORY_REQUEST
    displayName: "Requested Minimum Memory Limit"
    description: "Minimum requested amount of memory the container can use."
    required: true
    value: 100Mi
  - name: BOUNCER_MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: 250Mi

objects:
  - apiVersion: postgres-operator.crunchydata.com/v1beta1
    kind: PostgresCluster
    metadata:
      name: ${SOLUTION_NAME}-cluster
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${SOLUTION_NAME}-cluster
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
    spec:
      monitoring:
        pgmonitor:
          exporter:
            image: ${DB_MONITOR_IMAGE}
          resources:
            requests:
              cpu: ${MONITOR_CPU_REQUEST}
              memory: ${MONITOR_MEMORY_REQUEST}
            limits:
              cpu: ${MONITOR_CPU_LIMIT}
              memory: ${MONITOR_MEMORY_LIMIT}
      image: ${DB_IMAGE}
      postgresVersion: ${{POSTGRES_VERSION}}
      instances:
        - name: ${APP_NAME}
          replicas: ${{REPLICAS}}
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          dataVolumeClaimSpec:
            accessModes:
              - ${ACCESS_MODE}
            resources:
              requests:
                storage: ${VOLUME_CAPACITY}
            storageClassName: ${STORAGE_CLASS}
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        postgres-operator.crunchydata.com/cluster: hippo-ha
                        postgres-operator.crunchydata.com/instance-set: ${SOLUTION_NAME}
      backups:
        pgbackrest:
          global:
            repo1-retention-full: "2"
          image: ${DB_BACKUP_IMAGE}
          repoHost:
            resources:
              requests:
                cpu: ${BACKUP_CPU_REQUEST}
                memory: ${BACKUP_MEMORY_REQUEST}
              limits:
                cpu: ${BACKUP_CPU_LIMIT}
                memory: ${BACKUP_MEMORY_LIMIT}
          repos:
            - name: repo1
              schedules:
                # Full backup every day at 8:00am UTC
                full: "0 8 * * *"
                # Incremental backup every 4 hours, except at 8am UTC (when the full backup is running)
                incremental: "0 0,4,12,16,20 * * *"
              volume:
                volumeClaimSpec:
                  accessModes:
                    - ${BACKUP_ACCESS_MODE}
                  resources:
                    requests:
                      storage: ${BACKUP_VOLUME_CAPACITY}
                  storageClassName: ${BACKUP_STORAGE_CLASS}
      proxy:
        pgBouncer:
          config:
            global:
              client_tls_sslmode: disable
          image: ${DB_BOUNCER_IMAGE}
          replicas: ${{BOUNCER_REPLICAS}}
          resources:
            requests:
              cpu: ${BOUNCER_CPU_REQUEST}
              memory: ${BOUNCER_MEMORY_REQUEST}
            limits:
              cpu: ${BOUNCER_CPU_LIMIT}
              memory: ${BOUNCER_MEMORY_LIMIT}
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
                    labelSelector:
                      matchLabels:
                        postgres-operator.crunchydata.com/cluster: hippo-ha
                        postgres-operator.crunchydata.com/role: pgbouncer
