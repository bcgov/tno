version: '3.5'

services:
  ####################### Ingestion Services #######################
  syndication:
    image: tno:syndication
    profiles:
      - all
      - service
      - data
    restart: "no"
    container_name: tno-syndication
    build:
      context: services/syndication
    env_file:
      - services/syndication/.env
    ports:
      - ${SYNDICATION_PORT:-40020}:8080
    depends_on:
      - database
      - broker
    networks:
      - tno
    healthcheck:
      test: curl -s -f http://localhost:8080/health || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  nlp:
    image: tno:nlp
    profiles:
      - all
      - service
      - data
    restart: "no"
    container_name: tno-nlp
    build:
      context: services/nlp
    env_file:
      - services/nlp/.env
    ports:
      - ${NLP_PORT:-40022}:8080
    volumes:
      - ./services/nlp/src/main/resources/models:/app/classes/models
    depends_on:
      - database
    networks:
      - tno
    healthcheck:
      test: curl -s -f http://localhost:8080/health || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  indexing:
    image: tno:indexing
    profiles:
      - all
      - service
      - data
      - elastic
    restart: "no"
    container_name: tno-indexing
    build:
      context: services/elastic
    env_file:
      - services/elastic/.env
    ports:
      - ${INDEXING_PORT:-40023}:8080
    depends_on:
      - database
      - elastic
    networks:
      - tno
    healthcheck:
      test: curl -s -f http://localhost:8080/health || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  audio:
    image: tno:audio
    profiles:
      - all
      - service
      - data
    restart: "no"
    container_name: tno-audio
    build:
      context: services/audio
    env_file:
      - services/audio/.env
    ports:
      - ${AUDIO_PORT:-40024}:8080
    depends_on:
      - database
      - broker
    networks:
      - tno
    volumes:
      - tno-audio-data:/data
    healthcheck:
      test: curl -s -f http://localhost:8080/health || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  capture:
    image: tno:capture
    profiles:
      - all
      - service
      - data
    restart: "no"
    container_name: tno-capture
    build:
      context: services/capture
    env_file:
      - services/capture/.env
    ports:
      - ${AUDIO_PORT:-40025}:8080
    depends_on:
      - database
      - broker
    networks:
      - tno
    volumes:
      - tno-audio-data:/data
    healthcheck:
      test: curl -s -f http://localhost:8080/health || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  tno-audio-data:
    name: tno-audio-data