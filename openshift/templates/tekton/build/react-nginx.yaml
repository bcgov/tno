kind: Template
apiVersion: v1
metadata:
  name: react-nginx-build
  annotations:
    openshift.io/display-name: React Nginx Web Application Image
    description:
      Build an image containing the React web application, hosted within nginx.
      It also includes environment variables.
    tags: react,nginx

parameters:
  - name: SOLUTION_NAME
    displayName: Solution Group Name
    description: The name of the solution (e.g tno).
    required: true
    value: "tno"
  - name: APP_NAME
    displayName: Application Name
    description: The name of the application.
    required: true

  - name: NODE_ENV
    displayName: "Node Environment"
    description: "A way to identify within the app which environment the app is in"
    value: "production"

  - name: GIT_URL
    displayName: "Git Repository URL"
    description: "The URL of the repository with your application source code."
    required: true
    value: "https://github.com/bcgov/tno.git"
  - name: GIT_REF
    displayName: "Git Reference"
    description:
      "Set this to a branch name, tag or other ref of your repository if you
      are not using the default branch."
    value: dev
  - name: CONTEXT_DIR
    displayName: "Context Directory"
    description: "Set this to use a subdirectory of the source code repository"
    value: "app/editor"
  - name: DOCKERFILE
    displayName: "Dockerfile Name"
    description: "The Dockerfile name"
    required: true
    value: "Dockerfile"

  - name: IMAGE_TAG
    displayName: "Output Image Tag"
    description: "The tag given to the built image."
    required: true
    value: "latest"

  - name: CPU_LIMIT
    displayName: "Resources CPU Limit"
    description: "The resources CPU limit (in cores) for this build."
    required: true
    value: 2000m
  - name: MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: 2Gi

objects:
  # Environment Variable configuration settings.
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}.${GIT_REF}
      annotations:
        description: Environment variable configuration
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}.${GIT_REF}
        app: ${APP_NAME}
        solution: ${SOLUTION_NAME}
    data:
      environment.env: |-
        NODE_ENV=${NODE_ENV}
        REACT_APP_NOT_SECRET_CODE=fake-code

  # The final build image.
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}
      annotations:
        description: Keeps track of changes in the image
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}
        app: ${APP_NAME}
        solution: ${SOLUTION_NAME}

  # The build config that will be created will be named for the branch you created it for.
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}.${GIT_REF}
      annotations:
        description: Defines how to build the image
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}.${GIT_REF}
        app: ${APP_NAME}
        solution: ${SOLUTION_NAME}
    spec:
      completionDeadlineSeconds: 1800
      triggers:
        - type: ImageChange
        - type: ConfigChange
      runPolicy: Serial
      source:
        git:
          uri: ${GIT_URL}
          ref: ${GIT_REF}
        contextDir: ${CONTEXT_DIR}
        configMaps:
          - configMap:
              name: ${SOLUTION_NAME}-${APP_NAME}
            destinationDir: ./
      strategy:
        type: Docker
        dockerStrategy:
          imageOptimizationPolicy: SkipLayers
          dockerfilePath: ${DOCKERFILE}
      output:
        to:
          kind: ImageStreamTag
          name: ${SOLUTION_NAME}-${APP_NAME}:${IMAGE_TAG}
      resources:
        limits:
          cpu: ${CPU_LIMIT}
          memory: ${MEMORY_LIMIT}
