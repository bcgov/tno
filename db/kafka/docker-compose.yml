---
version: '3.5'

services:
  zookeeper:
    image: tno:kafka-zookeeper
    profiles: ["kafka"]
    restart: on-failure:1
    hostname: zookeeper
    container_name: tno-zookeeper
    build:
      context: db/kafka/zookeeper
    env_file:
      - db/kafka/zookeeper/.env
    ports:
      - ${KAFKA_ZOOKEEPER_PORT:-50010}:2181
    volumes:
      - tno-zookeeper-data:/var/lib/zookeeper/data
      - tno-zookeeper-log:/var/lib/zookeeper/log
      - tno-zookeeper-secrets:/etc/zookeeper/secrets
    networks:
      - tno

  broker:
    image: tno:kafka-broker
    profiles: ["kafka"]
    restart: on-failure:1
    hostname: broker
    container_name: tno-broker
    build:
      context: db/kafka/broker
    env_file:
      - db/kafka/broker/.env
    depends_on:
      - zookeeper
    ports:
      # - ${KAFKA_BROKER_PORT:-50011}:9101
      - ${KAFKA_BROKER_ADVERTISED_HOST_PORT:-50012}:9092
      - ${KAFKA_BROKER_ADVERTISED_EXTERNAL_PORT:-50019}:29094
      # - ${KAFKA_BROKER_REST_PORT:-50017}:8090
    volumes:
      - tno-broker-data:/var/lib/kafka/data
      - tno-broker-secrets:/etc/kafka/secrets
    networks:
      - tno

  schema-registry:
    image: tno:kafka-schema-registry
    profiles: ["kafka"]
    restart: on-failure:1
    hostname: schema-registry
    container_name: tno-schema-registry
    build:
      context: db/kafka/schema-registry
    env_file:
      - db/kafka/schema-registry/.env
    depends_on:
      - broker
    ports:
      - ${KAFKA_SCHMEA_REGISTRY_PORT:-50013}:8081
    volumes:
      - tno-schema-secrets:/etc/schema-registry/secrets
    networks:
      - tno

  rest-proxy:
    image: tno:kafka-rest-proxy
    profiles: ["kafka"]
    restart: on-failure:1
    hostname: rest-proxy
    container_name: tno-rest-proxy
    build:
      context: db/kafka/rest-proxy
    env_file:
      - db/kafka/rest-proxy/.env
    depends_on:
      - broker
      - schema-registry
    ports:
      - ${KAFKA_REST_PROXY_PORT:-50018}:8082
    networks:
      - tno

  connect:
    image: tno:kafka-connect
    profiles: ["kafka"]
    restart: on-failure:1
    hostname: connect
    container_name: tno-connect
    build:
      context: db/kafka/connect
    env_file:
      - db/kafka/connect/.env
    depends_on:
      - broker
      - schema-registry
    ports:
      - ${KAFKA_CONNECT_PORT:-50014}:8083
    volumes:
      - ./db/kafka/connect/jars:/etc/kafka-connect/jars
      - tno-connect-secrets:/etc/kafka-connect/secrets
      - tno-connect-data:/var/lib/kafka/data
      - tno-broker-secrets:/etc/kafka/secrets
    networks:
      - tno

  ksqldb:
    image: tno:kafka-ksqldb
    profiles: ["kafka"]
    restart: on-failure:1
    hostname: ksqldb
    container_name: tno-ksqldb
    build:
      context: db/kafka/ksqldb
    env_file:
      - db/kafka/ksqldb/.env
    depends_on:
      - broker
      - connect
    ports:
      - ${KAFKA_KSQLDB_PORT:-50016}:8088
    networks:
      - tno

  cat:
    image: tno:kafkacat
    profiles: ["kafka"]
    restart: on-failure:1
    hostname: cat
    container_name: tno-kafkacat
    build:
      context: db/kafka/cat
    depends_on:
      - broker
    networks:
      - tno

  ####################### Utilities #######################

  kowl:
    image: tno:kafka-kowl
    profiles: ["utility"]
    restart: on-failure:1
    hostname: kowl
    container_name: tno-kowl
    build:
      context: db/kafka/kowl
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    volumes:
      - ./db/kafka/kowl/.env:/etc/kowl/config.yaml
    ports:
      - ${KAFKA_KOWL_PORT:-50017}:8080
    networks:
      - tno

####################### Volumes Definition #######################
volumes:
  tno-zookeeper-data:
    name: tno-zookeeper-data
  tno-zookeeper-log:
    name: tno-zookeeper-log
  tno-zookeeper-secrets:
    name: tno-zookeeper-secrets
  tno-broker-data:
    name: tno-broker-data
  tno-broker-secrets:
    name: tno-broker-secrets
  tno-connect-data:
    name: tno-connect-data
  tno-connect-secrets:
    name: tno-connect-secrets
  tno-schema-secrets:
    name: tno-schema-secrets
