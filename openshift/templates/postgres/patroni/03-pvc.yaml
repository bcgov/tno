apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: patroni-pgsql-persistent
  annotations:
    description: |-
      Patroni Postgresql database cluster, with persistent storage.
    iconClass: icon-postgresql
    openshift.io/display-name: Patroni Postgresql (Persistent)
    openshift.io/long-description: This template deploys a patroni postgresql HA
      cluster with persistent storage.
    tags: postgresql

parameters:
  - name: APP_NAME
    displayName: "App Name"
    description: "The name of the application (grouped)."
    required: true
    value: "tno"
  - name: GROUP_NAME
    displayName: "Component Group Name"
    description: "The name of the application component group [app, api, database]"
    required: true
    value: "database"
  - name: PROJECT_NAMESPACE
    displayName: "OpenShift Project Namespace"
    description: "The namespace of the OpenShift project containing the application."
    required: true
    value: "9b301c"
  - name: ENV_NAME
    displayName: "Environment name"
    description: "The name for this environment [dev, test, prod]"
    required: true
    value: "dev"

  - name: STORAGE_CLASS
    displayName: "The Backup Storage Class Name"
    description: "The backup storage class name is the type of storage [netapp-file-standard, netapp-file-extended, netapp-file-backup, netapp-block-standard, netapp-block-extended]"
    required: true
    value: "netapp-file-backup"
  - name: ACCESS_MODE
    displayName: "The Backup Storage Access Mode"
    description: "The backup storage access mode [ReadWriteOnce, ReadWriteMany]"
    required: true
    value: "ReadWriteMany"
  - name: VOLUME_CAPACITY
    displayName: "Backup persistent Volume Capacity"
    description: "Backup bolume space available for data, e.g. 512Mi, 2Gi."
    required: true
    value: "5Gi"

objects:
  # Storage for backup.
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${GROUP_NAME}-backup
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}-${GROUP_NAME}-backup
        app: ${APP_NAME}
        group: ${GROUP_NAME}
    spec:
      storageClassName: ${STORAGE_CLASS}
      accessModes:
        - ${ACCESS_MODE}
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
