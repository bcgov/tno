apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: editor
  annotations:
    description: >-
      Build an docker image from a GIT repository using an existing BuildConfig.
      Then deploy to the specified environment.
    tags: oc,git,docker,build,deploy
spec:
  params:
    - name: GIT_SOURCE
      description: >-
        Identify the git source for this build.
        A git source name is applied to the end of a BuildConfig to
        identify the source (i.e. editor.{GIT_SOURCE}).
      type: string
      default: dev

    - name: IMAGE_TAG
      description: >-
        The tag given to the built images.
        Use this to create versioned images.
      type: string
      default: latest

    - name: PROJECT_SHORTNAME
      description: >-
        The project namespace shortname.
        The part before the "-" (i.e. 9b301c-dev = 9b301c).
      type: string
      default: 9b301c
    - name: DEPLOY_TO
      description: >-
        Identify the environment to deploy the solution to [dev,test,prod,tools].
      type: string
      default: dev

  tasks:
    - name: maintenance-on
      taskRef:
        name: oc-update-route
        kind: Task
      params:
        - name: PROJECT_NAMESPACE
          value: $(params.PROJECT_SHORTNAME)-$(params.DEPLOY_TO)
        - name: ROUTE
          value: editor
        - name: SERVICE
          value: nginx

    - name: build
      taskRef:
        name: oc-build
        kind: Task
      params:
        - name: APP_NAME
          value: editor
        - name: GIT_SOURCE
          value: $(params.GIT_SOURCE)
        - name: IMAGE_TAG
          value: $(params.IMAGE_TAG)

    - name: deploy
      runAfter:
        - build
        - maintenance-on
      taskRef:
        name: oc-deploy-with-tag
        kind: Task
      params:
        - name: IMAGE_NAME
          value: editor
        - name: IMAGE_TAG
          value: $(params.IMAGE_TAG)
        - name: ENV
          value: $(params.DEPLOY_TO)

    - name: maintenance-off
      runAfter:
        - deploy
      taskRef:
        name: oc-update-route
        kind: Task
      params:
        - name: PROJECT_NAMESPACE
          value: $(params.PROJECT_SHORTNAME)-$(params.DEPLOY_TO)
        - name: ROUTE
          value: editor
        - name: SERVICE
          value: editor
