kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: elastic-data-storage
  annotations:
    openshift.io/display-name: Elasticsearch Server
    description: Elasticsearch is a search engine based on the Lucene library. It provides a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents.
    tags: tno,elastic
parameters:
  - name: SOLUTION_NAME
    displayName: Solution Group Name
    description: The name of the solution (e.g tno).
    required: true
    value: "tno"
  - name: APP_NAME
    displayName: Application Name
    description: The name of the application (e.g. api-editor.dev).
    required: true
    value: "elastic"

  - name: PROJECT_NAMESPACE
    displayName: OpenShift Project Namespace
    description: The namespace of the OpenShift project containing the application.
    required: true
    value: "9b301c"
  - name: ENV_NAME
    displayName: Environment name
    description: The name for this environment [dev, test, prod]
    required: true
    value: "dev"

  - name: STORAGE_CLASS
    displayName: The Storage Class Name
    description: The storage class name is the type of storage [netapp-file-standard, netapp-file-extended, netapp-file-backup, netapp-block-standard, netapp-block-extended]
    required: true
    value: "netapp-file-standard"
  - name: ACCESS_MODE
    displayName: The Storage Access Mode
    description: The storage access mode [ReadWriteOnce, ReadWriteMany]
    required: true
    value: "ReadWriteMany"
  - name: VOLUME_CAPACITY
    displayName: Persistent Volume Capacity
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    required: true
    value: "2Gi"

objects:
  # Persistent storage for the elastic.
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
    annotations:
      description: "${SOLUTION_NAME} ${APP_NAME} storage volume"
    finalizers:
      - kubernetes.io/pvc-protection
    spec:
      accessModes:
        - ${ACCESS_MODE}
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
      storageClassName: ${STORAGE_CLASS}
      volumeMode: Filesystem
