apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: audio-capture-service-deploy
  annotations:
    openshift.io/display-name: Java Audio Capture Ingestion Service Image
    description: Build an image containing the Java Audio Capture Ingestion Service.
    tags: java,maven,service,audio,capture,kafka

parameters:
  - name: SOLUTION_NAME
    displayName: Solution Group Name
    description: The name of the solution (e.g tno).
    required: true
    value: tno
  - name: APP_NAME
    displayName: Application Name
    description: The name of the application.
    required: true
    value: audio-capture

  - name: PROJECT_NAMESPACE
    displayName: OpenShift Project Namespace
    description: The namespace of the OpenShift project containing the application.
    required: true
    value: 9b301c
  - name: ENV_NAME
    displayName: Environment name
    description: The name for this environment [dev, test, prod]
    required: true
    value: dev

  - name: VOLUME_SIZE
    displayName: Backup Volume Size
    description:
      The size of the persistent volume used for restoring and verifying
      backups, e.g. 512Mi, 1Gi, 2Gi.  Ensure this is sized correctly.  It should be
      large enough to contain your largest database.
    required: true
    value: "5Gi"
  - name: VOLUME_CLASS
    displayName: Backup Volume Class
    description:
      The class of the persistent volume used for restoring and verifying
      backups; should be one of netapp-block-standard or netapp-file-standard.  netapp-block-standard
      performs better.
    required: true
    value: "netapp-file-standard"
  - name: VOLUME_MOUNT_PATH
    displayName: Verification Volume Mount Path
    description: The path on which to mount the volume.
    required: true
    value: "/data"

objects:
  # Storage for videos.
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${SOLUTION_NAME}-${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${SOLUTION_NAME}-${APP_NAME}
        solution: ${SOLUTION_NAME}
        app: ${APP_NAME}
    spec:
      storageClassName: ${VOLUME_CLASS}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_SIZE}
